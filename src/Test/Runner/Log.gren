module Test.Runner.Log exposing
    ( runWithOptions
    , logOutput
    )

{-| Log Runner

This will log the test results to the console, then exit with exit code 0
if the tests all passed, and 1 if any failed.

@docs run, runWithOptions

-}

import Random
import Test.Runner.String exposing (Summary)
import String
import Test exposing (Test)
import Stream exposing (Stream)
import Node
import Task


type alias OutputStreams =
    { reportStreamOnPass : Stream
    , reportStreamOnFail : Stream
    }


{-| Run the test using the provided options.
-}
runWithOptions : OutputStreams -> Int -> Random.Seed -> Test -> Cmd a
runWithOptions streams runs seed test =
    Test.Runner.String.runWithOptions runs seed test
        |> logOutput streams
 

summarize : Summary -> String
summarize { output, passed, failed, autoFail } =
    let
        headline =
            if failed > 0 then
                "TEST RUN FAILED"

            else
                case autoFail of
                    Nothing ->
                        "TEST RUN PASSED"

                    Just reason ->
                        "TEST RUN FAILED because " ++ reason
    in
    String.join "\n"
        [ output
        , headline ++ "\n"
        , "Passed: " ++ String.fromInt passed
        , "Failed: " ++ String.fromInt failed
        ]


logOutput : OutputStreams -> Summary -> Cmd a
logOutput streams summary =
    let
        output =
            summarize summary

        { printStream, exitCode } =
            if summary.failed > 0 || summary.autoFail /= Nothing then
                { printStream = streams.reportStreamOnFail
                , exitCode = 1
                }

            else
                { printStream = streams.reportStreamOnPass
                , exitCode = 0
                }
    in
    Stream.sendString printStream output
        |> Task.andThen (\_ -> Node.exitWithCode exitCode)
        |> Task.execute

