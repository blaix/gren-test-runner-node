module Test.Runner.Node exposing (Program, run)

import Test exposing (Test)
import Node
import Node.Program as NodeP
import Test.Runner.Log as Log


type alias Program =
    NodeP.Program {} {}


run : Test -> Program
run test =
    NodeP.define
        { init = init test
        , update = (\_ _ -> { model = {}, command = Cmd.none })
        , subscriptions = \_ -> Sub.none
        }


init : Test -> NodeP.AppInitTask { model : {}, command : Cmd {} }
init test =
    NodeP.await Node.initialize <| \nodeConfig ->
        NodeP.startProgram 
            { model = {}
            , command =
                Log.run
                    { reportStreamOnPass = nodeConfig.stdout
                    , reportStreamOnFail = nodeConfig.stderr
                    }
                    test
            }